/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
  tapping-term-ms = <201>;
  flavor = "tap-preferred";
};
&sk {
  release-after-ms = <2000>;
  quick-release;
};

/* Layers */
#define ALA0 0
#define ALA1 1
#define ALA2 2
#define ALA3 3
#define ALA4 4
#define NAS0 5
#define NAS1 6
#define NAS2 7
#define FUN0 8
#define FUN1 9
#define FUN2 10
#define MODL 11
#define MODR 12

/ { 
  
  behaviors {
    skq: sticky_key_quick_release {
      compatible = "zmk,behavior-sticky-key";
      label = "STICKY_KEY_QUICK_RELEASE";
      #binding-cells = <1>;
      bindings = <&kp>;
      release-after-ms = <1000>;
      quick-release;
      ignore-modifiers;
    };
    
    
    hm_l: homerow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS_L";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
    };
    hm_r: homerow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS_R";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
    };
    sr: shift_layer {
      compatible = "zmk,behavior-hold-tap";
      label = "SHIFT_LAYER";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&to>;
      retro-tap;
    };
    hl_l: homerow_layers_left {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_LAYERS_L";
      #binding-cells = <2>;
      tapping-term-ms = <220>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&kp>;
      hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
    };
    hl_r: homerow_layers_right {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_LAYERS_R";
      #binding-cells = <2>;
      tapping-term-ms = <220>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&kp>;
      hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
    };
    td: tapdance {
      compatible = "zmk,behavior-hold-tap";
      label = "TAPDANCE";
      #binding-cells = <2>;
      tapping-term-ms = <190>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    quesexcl: quesexcl {
      compatible = "zmk,behavior-mod-morph";
      label = "QUESTIONMARK_EXCLAMATIONMARK";
      #binding-cells = <0>;
      bindings = <&kp LS(MINUS)>, <&kp RBKT>;
      mods = <(MOD_LSFT)>;
    };
    
    slsbsls: slsbsls {
      compatible = "zmk,behavior-mod-morph";
      label = "SLASH_BACKSLASH";
      #binding-cells = <0>;
      bindings = <&kp LS(N7)>, <&kp RA(NUBS)>;
      mods = <(MOD_LSFT)>;
    };
    
    dwjm: dwm_j_m {
      compatible = "zmk,behavior-mod-morph";
      label = "DWM_FORWARD_MONOCLE";
      #binding-cells = <0>;
      bindings = <&kp RA(J)>, <&kp RA(M)>;
      mods = <(MOD_LSFT)>;
    };
    
    dwkt: dwm_k_t {
      compatible = "zmk,behavior-mod-morph";
      label = "DWM_BACKWARD_TABBED";
      #binding-cells = <0>;
      bindings = <&kp RA(K)>, <&kp RA(T)>;
      mods = <(MOD_LSFT)>;
    };
    
    dwpent: dwm_p_ent {
      compatible = "zmk,behavior-mod-morph";
      label = "DWM_OPEN_ENTER";
      #binding-cells = <0>;
      bindings = <&kp RA(P)>, <&kp RA(ENTER)>;
      mods = <(MOD_LSFT)>;
    };
    
    mods: mods_layers {
      compatible = "zmk,behavior-mod-morph";
      label = "MODS_LAYERS";
      #binding-cells = <0>;
      bindings = <&tog MODL>, <&tog MODR>;
      mods = <(MOD_LSFT)>;
    };
  };
  // keypositions
  //                  0       1       2                   3       4       5
  //          6       7       8       9                   10      11      12          13
  //                          14      15                  16      17
  keymap {
    compatible = "zmk,keymap";
    
    ala0 {
      label = "ALA0";
      bindings = <
      &kp N               &kp S               &kp D               &kp SLASH           &kp O               &kp LBKT
      &skq LSHIFT         &kp R               &kp H               &kp T               &kp SPACE           &kp E               &kp I               &mt LCTRL ESC
      &sl ALA2            &sl NAS0            &sl FUN0            &sl ALA1    
      >;
    };

    ala1 {
      label = "ALA1";
      bindings = <
      &kp J               &kp K               &kp V               &slsbsls            &kp Q               &kp SEMI  
      &trans              &kp W               &kp Y               &kp P               &kp C               &kp COMMA           &kp Z               &trans
      &sl ALA3            &sl NAS1            &trans              &trans
      >;
    };

    ala2 {
      label = "ALA2";
      bindings = <
      &kp X               &kp M               &kp B               &sk LALT            &quesexcl           &kp SQT 
      &trans              &kp L               &kp F               &kp G               &kp U               &kp DOT             &kp A               &trans
      &trans              &trans              &sl FUN1            &sl ALA4
      >;
    };

    ala3 {
      label = "ALA3";
      bindings = <
      &kp LS(N1)          &kp NUBS            &kp LS(NUBS)        &kp RA(SQT)         &kp RA(NUHS)        &none
      &trans              &kp RA(N2)          &kp RA(LBKT)        &kp RA(RBKT)        &kp LS(N8)          &kp LS(N9)          &kp LS(N2)          &trans
      &trans              &trans              &trans              &trans              
      >;
    };

    ala4 {
      label = "ALA4";
      bindings = <
      &kp N1              &kp N2              &kp N3              &kp N4              &kp N5              &kp N6
      &trans              &kp N7              &kp N8              &kp N9              &kp N0              &kp LS(N3)          &kp MINUS           &trans
      &trans              &trans              &trans              &trans              
      >;
    };

    nas0 {
      label = "NAS0";
      bindings = <
      &kp LS(N5)          &kp LS(N6)          &kp EQUAL           &kp BSPC            &kp LEFT            &kp RIGHT
      &trans              &mods               &kp RA(EQUAL)       &kp TAB             &kp DOWN            &kp UP              &kp ENTER           &trans
      &trans              &trans              &sl NAS2            &sl NAS1              
      >;
    };

    nas1 {
      label = "NAS1";
      bindings = <
      &kp RA(E)           &kp NUHS            &kp LS(NUHS)        &kp DEL             &kp HOME            &kp END   
      &trans              &kp LS(GRAVE)       &kp RA(N3)          &kp RA(N7)          &kp PG_DN           &kp PG_UP           &kp LS(N0)          &trans
      &trans              &trans              &trans              &trans              
      >;
    };

    nas2 {
      label = "NAS2";
      bindings = <
      &bt BT_SEL 0        &bt BT_SEL 1        &kp PSCRN           &kp GRAVE           &bt BT_CLR          &kp LS(SQT)   
      &trans              &bt BT_SEL 2        &bt BT_SEL 3        &kp SCROLLLOCK      &kp LS(N4)          &kp LS(SEMI)        &kp LS(LBRC)        &trans
      &trans              &trans              &trans              &trans              
      >;
    };
    
    fun0 {
      label = "FUN0";
      bindings = <
      &kp RA(F1)          &kp RA(F2)          &kp RA(F3)          &kp RA(F4)          &kp RA(F5)          &kp RA(F6)        
      &trans              &kp RA(F7)          &kp RA(F8)          &kp RA(F9)          &dwjm               &dwkt               &dwpent             &trans
      &sl FUN1            &sl FUN2            &trans              &trans              
      >;
    };
    
    fun1 {
      label = "FUN1";
      bindings = <
      &kp RA(LS(Q))       &kp RA(LS(C))       &kp LGUI            &kp RA(B)           &kp RA(H)           &kp RA(L)         
      &trans              &trans              &trans              &kp CAPS            &kp RA(I)           &kp RA(D)           &trans              &trans
      &trans              &trans              &trans              &trans              
      >;
    };

    fun2 {
      label = "FUN2";
      bindings = <
      &kp F1              &kp F2              &kp F3              &kp F4              &kp F5              &kp F6            
      &trans              &kp F7              &kp F8              &kp F9              &kp F10             &kp F11             &kp F12             &trans
      &trans              &trans              &trans              &trans              
      >;
    };

    modl {
      label = "MODL";
      bindings = <
      &kp RALT            &trans              &kp LGUI            &trans              &trans              &trans            
      &tog MODL           &kp LALT            &kp LSFT            &kp LCTL            &trans              &trans              &trans              &trans
      &trans              &trans              &trans              &trans              
      >;
    };

    modr {
      label = "MODR";
      bindings = <
      &trans              &trans              &trans              &kp RGUI            &trans              &kp RALT          
      &trans              &trans              &trans              &trans              &kp RCTL            &kp RSFT            &kp LALT            &tog MODR
      &trans              &trans              &trans              &trans              
      >;
    };
  };
};
